// Top-level build file where you can add configuration options common to all sub-projects/modules.
def REACT_NATIVE_VERSION = new File(['node', '--print',"JSON.parse(require('fs').readFileSync(require.resolve('react-native/package.json'), 'utf-8')).version"].execute(null, rootDir).text.trim())
buildscript {
    ext {
        kotlinVersion = '1.6.0'
        buildToolsVersion = "28.0.3"
        minSdkVersion = 21
        compileSdkVersion = 33
        targetSdkVersion = 35

        // compileSdkVersion = 29
        // targetSdkVersion = 29
        playServicesVersion = "17.0.0" // google map
        androidXCore = "1.6.0"
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        // classpath("com.android.tools.build:gradle:3.5.2")
        // classpath 'com.google.gms:google-services:4.3.3'
        classpath("com.android.tools.build:gradle:4.0.0")
        classpath 'com.google.gms:google-services:4.3.15'
        classpath 'com.google.android.gms:strict-version-matcher-plugin:1.2.1' 
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    configurations.all {
        resolutionStrategy {
            // Remove this override in 0.65+, as a proper fix is included in react-native itself.
            force "com.facebook.react:react-native:" + REACT_NATIVE_VERSION
        }
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }

        google()
        jcenter()
        maven { url 'https://www.jitpack.io' }
    }
}
// thêm các dòng này khi bị lỗi Task :react-native-geocoder:verifyReleaseResources FAILED
subprojects {
    afterEvaluate {project ->
        if (project.hasProperty("android")) {
            android {
                compileSdkVersion rootProject.ext.compileSdkVersion
                buildToolsVersion rootProject.ext.buildToolsVersion
            }
        }
    }
}